// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Login Component should render without crashing 1`] = `
<StaticRouter
  basename=""
  context={Object {}}
  location="/"
>
  <Router
    history={
      Object {
        "action": "POP",
        "block": [Function],
        "createHref": [Function],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "listen": [Function],
        "location": Object {
          "hash": "",
          "pathname": "/",
          "search": "",
        },
        "push": [Function],
        "replace": [Function],
      }
    }
  >
    <Connect(withRouter(Login))
      store={
        Object {
          "clearActions": [Function],
          "dispatch": [Function],
          "getActions": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
        }
      }
    >
      <withRouter(Login)
        LoginAction={[Function]}
        loggedIn={false}
        store={
          Object {
            "clearActions": [Function],
            "dispatch": [Function],
            "getActions": [Function],
            "getState": [Function],
            "replaceReducer": [Function],
            "subscribe": [Function],
          }
        }
        storeSubscription={
          Subscription {
            "listeners": Object {
              "clear": [Function],
              "get": [Function],
              "notify": [Function],
              "subscribe": [Function],
            },
            "onStateChange": [Function],
            "parentSub": undefined,
            "store": Object {
              "clearActions": [Function],
              "dispatch": [Function],
              "getActions": [Function],
              "getState": [Function],
              "replaceReducer": [Function],
              "subscribe": [Function],
            },
            "unsubscribe": [Function],
          }
        }
      >
        <Route
          render={[Function]}
        >
          <Login
            LoginAction={[Function]}
            history={
              Object {
                "action": "POP",
                "block": [Function],
                "createHref": [Function],
                "go": [Function],
                "goBack": [Function],
                "goForward": [Function],
                "listen": [Function],
                "location": Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                },
                "push": [Function],
                "replace": [Function],
              }
            }
            location={
              Object {
                "hash": "",
                "pathname": "/",
                "search": "",
              }
            }
            loggedIn={false}
            match={
              Object {
                "isExact": true,
                "params": Object {},
                "path": "/",
                "url": "/",
              }
            }
            staticContext={Object {}}
            store={
              Object {
                "clearActions": [Function],
                "dispatch": [Function],
                "getActions": [Function],
                "getState": [Function],
                "replaceReducer": [Function],
                "subscribe": [Function],
              }
            }
            storeSubscription={
              Subscription {
                "listeners": Object {
                  "clear": [Function],
                  "get": [Function],
                  "notify": [Function],
                  "subscribe": [Function],
                },
                "onStateChange": [Function],
                "parentSub": undefined,
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "unsubscribe": [Function],
              }
            }
          >
            <div>
              <div>
                <div
                  aria-hidden="true"
                  aria-labelledby="signin-modal-label"
                  className="modal fade"
                  id="signinModal"
                  role="dialog"
                  tabIndex="-1"
                >
                  <div
                    className="modal-dialog"
                    role="document"
                  >
                    <div
                      className="modal-content"
                    >
                      <div
                        className="modal-header"
                      >
                        <h3
                          className="modal-title "
                          id="signin-modal-label"
                        >
                          Login
                        </h3>
                        <button
                          aria-label="Close"
                          className="close"
                          data-dismiss="modal"
                          id="CloseLoginModal"
                          type="button"
                        >
                          <span
                            aria-hidden="true"
                          >
                            Ã—
                          </span>
                        </button>
                      </div>
                      <div
                        className="modal-body"
                      >
                        <form
                          onSubmit={[Function]}
                        >
                          <div
                            className="form-group"
                          >
                            <strong>
                              <label
                                className="label"
                              >
                                Username
                              </label>
                            </strong>
                            <input
                              className="form-control"
                              name="username"
                              onChange={[Function]}
                              placeholder="username"
                              type="text"
                              value=""
                            />
                          </div>
                          <div
                            className="form-group"
                          >
                            <strong>
                              <label
                                className="label"
                              >
                                API Token
                              </label>
                            </strong>
                            <input
                              className="form-control"
                              name="token"
                              onChange={[Function]}
                              placeholder="token"
                              type="text"
                              value=""
                            />
                          </div>
                          <div
                            className="form-group"
                          >
                            <button
                              className="btn btn-primary form-control"
                              type="submit"
                            >
                              Sign In
                            </button>
                          </div>
                        </form>
                        <div
                          className="text-center"
                        >
                          <a
                            href="https://openconceptlab.org/accounts/password/reset/"
                          >
                            Forgot password?
                          </a>
                        </div>
                        <div
                          className="modal-footer text-center"
                        >
                          New User?
                           
                          <Link
                            replace={false}
                            to="https://openconceptlab.org/accounts/signup/"
                          >
                            <a
                              href="/https://openconceptlab.org/accounts/signup/"
                              onClick={[Function]}
                            >
                              Create account
                            </a>
                          </Link>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </Login>
        </Route>
      </withRouter(Login)>
    </Connect(withRouter(Login))>
  </Router>
</StaticRouter>
`;
